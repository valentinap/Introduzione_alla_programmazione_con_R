- Class: meta
  Course: Introduzione alla programmazione con R
  Lesson: Lezione 2
  Author: Valentina Porcu
  Type: Standard
  Organization: DataWiring
  Version: 2.4.3


- Class: text
  Output: Bentornato! Andiamo a creare dei vettori e ad effettuare su di essi delle operazioni

- Class: text
  Output: Finora abbiamo creato degli oggetti contenenti numeri singoli, adesso cominciamo a creare qualche oggetto più impegnativo
  
- Class: text
  Output: Premi enter per andare avanti con le domande. Se stai trovando difficoltà con una domanda, puoi sempre inserire il comando skip() per ottenere la soluzione e saltare alla prossima
  
- Class: cmd_question
  Output: Ripassiamo! Crea per prima cosa un vettore numerico che chiamerai vn che contenga i numeri 2, 5, 9, 14. Ricorda di usare la funzione c()
  CorrectAnswer: vn <- c(2, 5, 9, 14)
  AnswerTests: omnitest(correctExpr='vn <- c(2, 5, 9, 14)')
  Hint: Prova con vn <- c(2, 5, 9, 14)
  
- Class: text
  Output: Ottimo! Andiamo avanti con un vettore di caratteri
  
- Class: cmd_question
  Output: Ora crea un vettore di caratteri che chiamerai vc che contenga le città di Napoli, Como, e Rovigo. Ricorda di usare la funzione c() e di mettere le stringhe tra virgolette
  CorrectAnswer: vc <- c("Napoli", "Como", "Rovigo")
  AnswerTests: omnitest(correctExpr='vc <- c("Napoli", "Como", "Rovigo")')
  Hint: Prova con vc <- c("Napoli", "Como", "Rovigo")
  
  
- Class: cmd_question
  Output: Adesso creiamo un vettore logico vl che contenga due FALSE e 3 TRUE
  CorrectAnswer: vl <- c(FALSE, FALSE, TRUE, TRUE, TRUE)
  AnswerTests: omnitest(correctExpr='vl <- c(FALSE, FALSE, TRUE, TRUE, TRUE)')
  Hint: Prova con vl <- c(FALSE, FALSE, TRUE, TRUE, TRUE)

- Class: cmd_question
  Output: Adesso ristampiamo il nostro vettore di numeri vn
  CorrectAnswer: vn
  AnswerTests: omnitest(correctExpr='vn')
  Hint: Prova con vn
  
- Class: cmd_question
  Output: Calcoliamo la media su vn tramite la funzione mean()
  CorrectAnswer: mean(vn)
  AnswerTests: omnitest(correctExpr='mean(vn)')
  Hint: Prova con mean(vn)
  
- Class: cmd_question
  Output: Creiamo un altro vettore numerico vn2 che contenga i numeri 4, 7, 11, 21. Ricorda di usare la funzione c()
  CorrectAnswer: vn2 <- c(4, 7, 11, 21)
  AnswerTests: omnitest(correctExpr='vn2 <- c(4, 7, 11, 21)')
  Hint: Prova con vn2 <- c(4, 7, 11, 21)
  
- Class: cmd_question
  Output: Adesso sommiamo i due vettori
  CorrectAnswer: vn + vn2
  AnswerTests: omnitest(correctExpr='vn + vn2')
  Hint: Prova con vn + vn2
  
- Class: cmd_question
  Output: Riordiniamo il vettore vn2 con la funzione sort()
  CorrectAnswer: sort(vn2)
  AnswerTests: omnitest(correctExpr='sort(vn2)')
  Hint: Prova con sort(vn2)

- Class: text
  Output: Abbiamo sommato due vettori e abbiamo riordinato un vettore, bene!
  
- Class: cmd_question
  Output: Adesso selezioniamo il secondo elemento dal vettore vc
  CorrectAnswer: vc[2]
  AnswerTests: omnitest(correctExpr='vc[2]')
  Hint: Prova con vc[2]
  
- Class: cmd_question
  Output: E se volessimo selezionare il primo e il terzo elemento?
  CorrectAnswer: vc[c(1, 3)]
  AnswerTests: omnitest(correctExpr='vc[c(1, 3)]')
  Hint: Prova con  vc[c(1, 3)]
  
- Class: cmd_question
  Output: Usiamo adesso la funzione seq() per creare un elenco di numeri da 1 a 20, che chiamiamo seq1
  CorrectAnswer: seq1 <- seq(1, 20)
  AnswerTests: omnitest(correctExpr='seq1 <- seq(1, 20)')
  Hint: Prova con seq1 <- seq(1, 20)
  

- Class: cmd_question
  Output: Dal nostro oggetto seq1 estraiamo gli elementi dal quinto al nono
  CorrectAnswer: seq1[5:9]
  AnswerTests: omnitest(correctExpr='seq1[5:9]')
  Hint: Prova con seq1[5:9]
  
- Class: cmd_question
  Output: Sempre partendo dal nostro oggetto seq1 sostituiamo il secondo elemento con la stringa "nuovo oggetto"
  CorrectAnswer: seq1[2] = "nuovo oggetto"
  AnswerTests: omnitest(correctExpr='seq1[2] = "nuovo oggetto"')
  Hint: Prova con seq1[2] = "nuovo oggetto"
  
- Class: cmd_question
  Output: Stampiamo il nostro oggetto seq1 per verificare
  CorrectAnswer: print(seq1)
  AnswerTests: omnitest(correctExpr='print(seq1)')
  Hint: Prova con print(seq1)
  
- Class: cmd_question
  Output: Riprendiamo il nostro vettore numerico vn. Verifichiamo la sua natura con la funzione is.vector()
  CorrectAnswer: is.vector(vn)
  AnswerTests: omnitest(correctExpr='is.vector(vn)')
  Hint: Prova con is.vector(vn)
  
- Class: cmd_question
  Output: Adesso andiamo a cambiare la natura del vettore vn con la funzione as.character(). Salviamo il risultato nell'oggetto vnc
  CorrectAnswer: vnc <- as.character(vn)
  AnswerTests: omnitest(correctExpr='vnc <- as.character(vn)')
  Hint: Prova con vnc <- as.character(vn)

- Class: cmd_question
  Output: Stampiamo l'oggetto vnc, stavolta senza usare la funzione print()
  CorrectAnswer: vnc
  AnswerTests: omnitest(correctExpr='vnc')
  Hint: Prova con vnc

- Class: text
  Output: Hai visto? Ogni elemento del nuovo vettore è separato dalle virgolette, che lo identificano come vettore di caratteri!
  
- Class: text
  Output: Per ora ci fermiamo qua, ci vediamo nella prossima lezione!
