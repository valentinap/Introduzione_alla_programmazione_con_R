- Class: meta
  Course: Introduzione alla programmazione con R
  Lesson: Lezione 4
  Author: Valentina Porcu
  Type: Standard
  Organization: DataWiring
  Version: 2.4.3

- Class: text
  Output: In questa lezione creiamo come prima cosa un piccolo dataset
  
- Class: text
  Output: Premi enter per andare avanti con le domande. Se stai trovando difficoltà con una domanda, puoi sempre inserire il comando skip() per ottenere la soluzione e saltare alla prossima

- Class: cmd_question
  Output: Creiamo un piccolo dataframe Lo chiamiamo df1, e inseriamo due variabili, var1, con i valori 1, 2, e 3 , e var2, con i valori 5, 6, 7. Ricorda di usare la funzione data.frame()
  CorrectAnswer: df1 <- data.frame(var1 = c(1,2,3), var2 = c(4,5,6))
  AnswerTests: omnitest(correctExpr='df1 <- data.frame(var1 = c(1,2,3), var2 = c(4,5,6))')
  Hint: Prova con df1 <- data.frame(var1 = c(1,2,3), var2 = c(4,5,6))

- Class: cmd_question
  Output: Aggiungiamo una terza colonna a df1. La chiamiamo var3 e le diamo i valori 7, 8, 9. Utilizza l'operatore $
  CorrectAnswer: df1$var3 <- c(7, 8, 9)
  AnswerTests: omnitest(correctExpr='df1$var3 <- c(7, 8, 9)')
  Hint: Prova con df1$var3 <- c(7, 8, 9)
  
- Class: cmd_question
  Output: Come nel caso delle matrici, per selezionare un caso e una variabile dobbiamo indicare prima la riga e poi la colonna. Selezioniamo il secondo caso e la terza colonna
  CorrectAnswer: df1[2,3]
  AnswerTests: omnitest(correctExpr='df1[2,3]')
  Hint: Prova con df1[2,3]
  
- Class: cmd_question
  Output: Utilizziamo gli operatori per estrarre dalla variabile var3 del df1 i valori maggiori di 6
  CorrectAnswer: df1$var3 > 6
  AnswerTests: omnitest(correctExpr='df1$var3 > 6')
  Hint: Prova con df1$var3 > 6
  
- Class: text
  Output: Adesso facciamo qualche esempio relativo agli altri oggetti base di R
  
- Class: cmd_question
  Output: Una lista può contenere diversi tipi di oggetti. Creiamo una lista che contiene come primo oggetto i valori da 1 a 6, come secondo un vettore contenente i mesi di Gennaio, Febbraio e Marzo, come terzo la funzione somma (sum) e come quarto un booleano contenente due TRUE e un FALSE. Chiamiamo la lista l1 
  CorrectAnswer: l1 <- list(1:6, c("Gennaio", "Febbraio", "Marzo"), sum, c(TRUE, TRUE, FALSE))
  AnswerTests: omnitest(correctExpr='l1 <- list(1:6, c("Gennaio", "Febbraio", "Marzo"), sum, c(TRUE, TRUE, FALSE))')
  Hint: Prova con l1 <- list(1:6, c("Gennaio", "Febbraio", "Marzo"), sum, c(TRUE, TRUE, FALSE))
  
- Class: cmd_question
  Output: Stampa la lista l1
  CorrectAnswer: l1
  AnswerTests: omnitest(correctExpr='l1')
  Hint: Prova con l1
  
- Class: cmd_question
  Output: Adesso seleziona, dal primo elemento della lista l1, il terzo sotto-elemento
  CorrectAnswer: l1[[1]][3]
  AnswerTests: omnitest(correctExpr='l1[[1]][3]')
  Hint: Prova con l1[[1]][3]
  
  
- Class: cmd_question
  Output: Ora facciamo al volo due esercizi sui fattori. Crea un vettore v1 che contenga i seguenti elementi "a", "a", "b", "c", "a", "b", "c", "c", "b", "a"
  CorrectAnswer: v1 <- c("a", "a", "b", "c", "a", "b", "c", "c", "b", "a")
  AnswerTests: omnitest(correctExpr='v1 <- c("a", "a", "b", "c", "a", "b", "c", "c", "b", "a")')
  Hint: Prova con v1 <- c("a", "a", "b", "c", "a", "b", "c", "c", "b", "a")
  
- Class: cmd_question
  Output: Adesso trasforma v1 in un fattore f1 attribuendo i livelli "a", "b" e "c" e i label "basso", "medio" e "alto". Ricorda il parametro order = TRUE
  CorrectAnswer: f1 <- factor(v1, order = TRUE, levels = c("a", "b", "c"), labels = "basso", "medio", "alto")
  AnswerTests: omnitest(correctExpr='f1 <- factor(v1, order = TRUE, levels = c("a", "b", "c"), labels = "basso", "medio", "alto")')
  Hint: Prova con f1 <- factor(v1, order = TRUE, levels = c("a", "b", "c"), labels = "basso", "medio", "alto")
  
- Class: text
  Output: Benissimo! Ci vediamo nella prossima lezione  
  


